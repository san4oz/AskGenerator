@model AskGenerator.ViewModels.UserViewModel

@{
    ViewBag.Title = Resource.EditAccount;
    var returnUrl = ViewBag.ReturnUrl;
}

<div class="col-md-10">
    <div class="row">
        <div class="panel panel-default bootstrap-admin-no-table-panel">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">@Resource.Student</div>
            </div>
            <div class="bootstrap-admin-no-table-panel-content bootstrap-admin-panel-content collapse in">
                <form action="@Url.Action("Edit", "Account", new { id = Model.Id, returnUrl = returnUrl })" method="post" class="form-horizontal">
                    <fieldset>
                        <legend>@Resource.EditAccount</legend>
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Id)
                        <div class="form-group">
                            @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.Email, htmlAttributes: new { @clas = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.Email, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.EmailConfirmed, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.EditorFor(x => x.EmailConfirmed)
                            </div>
                            @Html.ValidationMessageFor(x => x.EmailConfirmed, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.LoginKey, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.LoginKey, htmlAttributes: new { @clas = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.LoginKey, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.Password, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.Password, htmlAttributes: new { @class = "form-control", type = "password" })
                            </div>
                            @Html.ValidationMessageFor(x => x.Password, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.PasswordConfirm, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.PasswordConfirm, htmlAttributes: new { @class = "form-control", type = "password" })
                            </div>
                            @Html.ValidationMessageFor(x => x.PasswordConfirm, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(x => x.GroupId, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">
                                    @Html.EditorFor(x => x.GroupId)
                                </div>
                                @Html.ValidationMessageFor(x => x.GroupId, null, htmlAttributes: new { @class = "col-lg-10" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.FacultyId, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">
                                    @Html.EditorFor(x => x.FacultyId)
                                </div>
                                @Html.ValidationMessageFor(x => x.FacultyId, null, htmlAttributes: new { @class = "col-lg-10" })
                            </div>
                        </fieldset>

                        <div class="form-group">
                            @Html.LabelFor(x => x.StudentId, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.StudentId, htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.StudentId, null, htmlAttributes: new { @class = "col-lg-10" })
                        </div>

                        @Html.SubmitBtn(Resource.Save)
                        @Html.ClearBtn(Resource.Clean)
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
    $(document).ready(function () {
        var select = function ($el, placeholder) {
            $el.html('<option value="">  ---  </option>' + $el.html()).select2({
                placeholder: placeholder,
                allowClear: true,
                width: 400
            });
        };
        var group = $("#GroupId"), faculty = $("#FacultyId");
        select(group, '@Resource.SelectGroup');
        select(faculty, '@Resource.SelectFaculty');

        faculty.on('select2:select', function () {
            group.val('').trigger("change");
        });
        group.on('select2:select', function () {
            faculty.val('').trigger("change");
        });
    });
    </script>
}