@model  AskGenerator.Mvc.ViewModels.FacultyViewModel
@{
    bool IsEditing = ViewBag.IsEditing ?? false;
    string legend;
    if(IsEditing){
        ViewBag.Title = @Resources.Resource.OldFaculty;
        legend = @Resources.Resource.EditFaculty;
    }
    else{
        ViewBag.Title = @Resources.Resource.NewFaculty;
        legend = @Resources.Resource.CreateFaculty;
    }
}

<div class="col-md-10">
    <div class="row">
        <div class="panel panel-default bootstrap-admin-no-table-panel">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">@Resources.Resource.Faculty</div>
            </div>
            <div class="bootstrap-admin-no-table-panel-content bootstrap-admin-panel-content collapse in">
                <form method="post" class="form-horizontal" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()  
                    <fieldset>
                        <legend>@legend</legend>
                        @if (Model == null || Model.Id.IsNullOrWhiteSpace())
                        {
                            <div class="form-group">
                                @Html.LabelFor(x => x.Id, htmlAttributes: new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-9">
                                    @Html.TextBoxFor(x => x.Id, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.Id)
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.EditorFor(x => x.Id)
                        }
                        <div class="form-group">
                            @Html.LabelFor(x => x.ShortName, htmlAttributes: new { @class = "col-lg-3 control-label" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(x => x.ShortName, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ShortName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "col-lg-3 control-label" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(x => x.Name, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.Name)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="btn-group col-lg-offset-3 col-lg-9">
                                @Html.SubmitBtn(Resources.Resource.Save)
                                @Html.ClearBtn(Resources.Resource.Clean)
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>