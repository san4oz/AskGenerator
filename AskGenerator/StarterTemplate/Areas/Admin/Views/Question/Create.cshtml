@model QuestionViewModel
@using AskGenerator.ViewModels
@{
    var isEdit = ViewBag.IsEditing ?? false;
    var legend = isEdit ? @Resources.Resource.EditQuestion : @Resources.Resource.CreateQuestion;
    ViewBag.Title = isEdit ? @Resources.Resource.OldQuestion : @Resources.Resource.NewGroup;
}

<div class="col-md-10">
    <div class="row">
        <div class="panel panel-default bootstrap-admin-no-table-panel">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">@Resources.Resource.QuestionBody</div>
            </div>
            <div class="bootstrap-admin-no-table-panel-content bootstrap-admin-panel-content collapse in">
                <form method="POST" class="form-horizontal" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.Id)
                    <fieldset>
                        <legend> @legend </legend>
                        <div class="form-group">
                            @Html.LabelFor(x => x.QuestionBody, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.QuestionBody, htmlAttributes: new { @clas = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.LowerRateDescription, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.LowerRateDescription, htmlAttributes: new { @clas = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.HigherRateDescription, htmlAttributes: new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(x => x.HigherRateDescription, htmlAttributes: new { @clas = "form-control" })
                            </div>
                        </div>

                        @Advanced()
                        @Html.HiddenFor(x => x.IsAboutTeacher)
                        <button type="submit" class="btn btn-primary">@Resources.Resource.Save</button>
                        <button type="reset" class="btn btn-default">@Resources.Resource.Clean</button>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>

@helper Advanced()
{
    <div class="panel-group" id="accordion">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                        @Resources.Resource.Advanced
                    </a>
                </h4>
            </div>
            <div id="collapseOne" class="panel-collapse collapse in">
                <div class="panel-body">
                    @Limit(Model.LeftLimit)
                    <hr/>
                    @Limit(Model.RightLimit)
                </div>
            </div>
        </div>
    </div>
}

@helper Limit(LimitViewModel limit, int maxSize = 30)
{
    if(limit != null){ 
        var size = maxSize.ToString() + "px";
        if(limit.Image != null){
            <img src="@limit.Image" alt="@limit.Image.Split('/').Last()" style="float:right; max-width:@size; max-height:@size;" />
        }
        <div class="form-group">
            @Html.LabelFor(x => limit.ImageFile, htmlAttributes: new { @class = "col-xs-1 control-label" })
            <div class="col-xs-1">
                @Html.EditorFor(x => limit.AvgLimit)
            </div>
            @Html.LabelFor(x => limit.ImageFile, htmlAttributes: new { @class = "col-md-1 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(x => limit.ImageFile, new { type = "file" })
                @Html.EditorFor(x => limit.Image)
                @Html.ValidationMessageFor(x => limit.Image)
            </div>
        </div>
    }
}