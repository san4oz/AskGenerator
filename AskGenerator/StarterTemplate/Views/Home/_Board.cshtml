@model TeacherListViewModel
@using AskGenerator.ViewModels
@using AskGenerator.Business.Entities

@{
    Layout = null;
}
<span id="data-from" style="display: none">@Resource.DataFrom <time>@DateTime.Now.ToString("HH:mm")</time></span>

@foreach (var t in Model.List)
{
    @Teacher(t)
}

@helper Teacher(TeacherViewModel teacher)
{
    var avg = Math.Round(teacher.AverageMark, 4);
    <article class="col-lg-2 col-md-3 col-sm-4 col-xs-6 teacher-tile-wrapper" id="@teacher.Id">
        <a href="#" class="teacher-tile" data-popover="@teacher.Badges.ToJson()">
            <div class="img-thumbnail">
                <div class="photo" style="background: url('@this.R.Image(teacher.Image, teacher.IsMale)') no-repeat center top / cover"></div>
            </div>
            <span title="@teacher.FullName()">@teacher.GetShortName()</span>
            <div class="badges">
                <span class="badge avg" data-togglee="tooltip" title="@avg">@Math.Round(avg, 1)</span>
                @foreach (var tbadge in teacher.Badges)
                {
                    if (tbadge.Display) { 
                        @Badge(tbadge)
                    }
                }
            </div>
        </a>
    </article>
}

@helper Badge(TeacherBadge tbadge)
{
    var badge = Model.Badges.GetOrDefault(tbadge.Id);
    if (badge != null)
    {
        var ttip = badge.ToolTip;
        if (ttip.EndsWith("?"))
        {
            ttip = ttip.TrimEnd('?') + '(' + tbadge.Mark.ToString("0.00") + ')';
        }
        if (string.IsNullOrEmpty(badge.Image))
        {
            <span class="badge" data-toggle="tooltip" title="@ttip"></span>
        }
        else
        {
            <span class="badge" data-toggle="tooltip" style="background-image: url(@badge.Image)" title="@ttip"></span>
        }
    }
}