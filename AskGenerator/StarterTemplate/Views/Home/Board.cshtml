@model BoardViewModel
@using AskGenerator.ViewModels
@using AskGenerator.Business.Entities
@{
    ViewBag.Title = @Resources.Resource.Board;
    var goodBadges = Model.Badges.Where(x => x.Key.Last() == 'r');
    var badBadges = Model.Badges.Where(x => x.Key.Last() == 'l');
}

@*Banner()*@
<h1 class="col-md-offset-1 col-md-5 col-lg-4">@Resources.Resource.Board</h1>
<h3 class="col-md-6 col-lg-7">@Resources.Resource.VotedStudentsFormat.FormatWith(Model.UniqueUsers) <span id="data-from-wrapper" class="h4"></span></h3>

<section id="legend" class="row">
    <div class="col-xs-12">
        @foreach (var pair in goodBadges)
        {
            @Badge(pair.Value)
        }
    </div>
    <div class="col-xs-12">
        @foreach (var pair in badBadges)
        {
            @Badge(pair.Value)
        }
    </div>
</section>
<section id="teacherBoard" class="row" data-src="@Url.Action("Board")">
    <div id="loader" class="popover"></div>
</section>
<article id="details-popover" hidden="hidden">
    <table>
        <thead>
            <tr>
                <td>@Resource.VotesCount</td>
                <td id="votesCount"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var q in Model.Questions)
            {
                var id = q.Key + 'm';
                <tr>
                    <td>@q.Value</td>
                    <td id="@id"></td>
                </tr>
            }
        </tbody>
    </table>
</article>

@section Scripts{
    <script>
        Pages.Board.init();

        //Pages.Board.loadBoard();
        Pages.Board.initRemainingClock('.clockdiv', 'March 23 2016 20:0:0 GMT+02:00');
        Pages.Board.initSubscibe();
    </script>
}

@helper Banner()
{
    <div class="col-md-offset-1 col-md-11 banner">
        <div class="col-xs-12 col-sm-6 clockdiv">
            <span class="h3" style="color:red;">До оголошення результатів залишилось:</span>
            <br />
            <div>
                <span class="days"></span>
                <div class="smalltext">дні</div>
            </div>
            <div>
                <span class="hours"></span>
                <div class="smalltext">годин</div>
            </div>
            <div>
                <span class="minutes"></span>
                <div class="smalltext">хвилин</div>
            </div>
            <div>
                <span class="seconds"></span>
                <div class="smalltext">секунд</div>
            </div>
        </div>
        @using (Html.BeginForm("Subscribe", "Home", FormMethod.Post, new { @class = "form-horizontal col-xs-12 col-sm-6 subscribe" }))
        {
            <span class="h3">Встигніть @Html.RouteLink("проголосувати", "Vote")!</span>
            var subscriber = new Subscriber();
            <div class="form-group">
                @Html.AntiForgeryToken()
                @Html.LabelFor(x => subscriber.Email, "Підпишіться на отримання результатів", htmlAttributes: new { @class = "col-xs-12 control-label" })
                <div class="col-md-9">
                    @Html.TextBoxFor(x => subscriber.Email, new { @class = "form-control", type = "email", placeholder = "example@gmail.com" })
                    <button type="submit" class="btn btn-primary" title="Підписатись">
                        <i class="glyphicon glyphicon-arrow-right"></i>
                    </button>
                </div>
            </div>
        }
    </div>
}

@helper Badge(LimitViewModel badge)
{
    <div class="col-xs-3 col-md-2 col-lg-1 thumbnail">
        <img src="@badge.Image" data-toggle="tooltip" title="@badge.ToolTip.TrimEnd('?')" />
        <div class="caption">
            @if (badge.Description.EndsWith("?"))
            {
                @badge.Description.TrimEnd('?')
                @Popover(badge)
            }
            else
            {
                @badge.Description
            }
        </div>
    </div>
}

@helper Popover(LimitViewModel badge)
{
    var q = Model.Questions.GetOrDefault(badge.Id);
    if (q != null)
    {
        <a href="#" class="help" type="button" data-toggle="popover" data-content="@q">
            ?
        </a>
    }
}