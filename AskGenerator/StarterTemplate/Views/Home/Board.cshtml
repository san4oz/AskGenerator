@model BoardViewModel
@using AskGenerator.ViewModels
@using AskGenerator.Business.Entities
@{
    Robots.KeyWords.AddRange(new string[]{"Board", "Кращі", "TOP", "Медалі"});
    Robots.Description = "Рейтинг виклачів Житомирського державного технологічного університету складений за результатами голосів студентів." + Environment.NewLine
        + " Кращі та гірші викладачі за різними критеріями.";
    ViewBag.Title = @Resources.Resource.Board;
    var goodBadges = Model.Badges.Where(x => x.Key.Last() == 'r');
    var badBadges = Model.Badges.Where(x => x.Key.Last() == 'l');
    var legendTileColClass = "col-xs-5 col-sm-3 col-md-2 col-lg-1";
}

@Banner()
<h1 class="col-md-offset-1 col-md-5 col-lg-4">@Resources.Resource.Board</h1>
<h3 class="col-md-6 col-lg-7">@Resources.Resource.VotedStudentsFormat.FormatWith(Model.UniqueUsers) <span id="data-from-wrapper" class="h4"></span></h3>
@if (!WebsiteSettings.IsVotingEnabled)
    {
        <section id="legend" class="col-xs-12">
            <div class="col-xs-12">
                @foreach (var pair in goodBadges)
                {
                    @Badge(pair.Value, legendTileColClass)
                }
            </div>
            <div class="col-xs-12">
                @foreach (var pair in badBadges)
                {
                    @Badge(pair.Value, legendTileColClass)
                }
                <div class="@legendTileColClass checkbox">
                    <input id="toggleBadges" checked data-toggle="toggle" data-on="Усі" data-off="З медалями" data-onstyle="success" data-offstyle="primary" type="checkbox">
                </div>
            </div>
        </section>
    }
<section id="teacherBoard" class="row" data-src="@Url.Action("Board")">
    <div id="loader" class="popover"></div>
</section>
<article id="details-popover" hidden="hidden">
    <table>
        <thead>
            <tr>
                <td>@Resource.VotesCount</td>
                <td id="votesCount"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var q in Model.Questions)
            {
                var id = q.Key + 'm';
                <tr>
                    <td>@q.Value</td>
                    <td id="@id"></td>
                </tr>
            }
        </tbody>
    </table>
</article>

@section Scripts{
    <script>
        Pages.Board.init();

        @if(WebsiteSettings.TimeBanner.Enabled) {
            <text>
                Pages.Board.initRemainingClock('.clockdiv');
                Pages.Board.initSubscibe();
            </text>
        }
    </script>
}

@helper Banner()
{
    if (WebsiteSettings.TimeBanner.Enabled)
    {
        @Html.Partial("_TimeBanner")
    }
}

@helper Badge(LimitViewModel badge, string colClass)
{
    <div class="@colClass thumbnail">
        <img src="@badge.Image" data-toggle="tooltip" title="@badge.ToolTip.TrimEnd('?')" />
        <div class="caption">
            @if (badge.Description.EndsWith("?"))
            {
                @badge.Description.TrimEnd('?')
                @Popover(badge)
            }
            else
            {
                @badge.Description
            }
        </div>
    </div>
}

@helper Popover(LimitViewModel badge)
{
    var q = Model.Questions.GetOrDefault(badge.Id);
    if (q != null)
    {
        <a href="#" class="help" type="button" data-toggle="popover" data-content="@q">
            ?
        </a>
    }
}