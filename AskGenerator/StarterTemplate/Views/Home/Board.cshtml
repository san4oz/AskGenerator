@model BoardViewModel
@using AskGenerator.ViewModels
@using AskGenerator.Business.Entities
@{
    ViewBag.Title = @Resources.Resource.TeacherBoard;
}

@Banner()
<h1 class="col-md-offset-1 col-md-5 col-lg-4">@Resources.Resource.TeacherBoard</h1>
<h3 class="col-md-6 col-lg-7">@Resources.Resource.VotedStudentsFormat.FormatWith(Model.UniqueUsers) <span id="data-from-wrapper" class="h4"></span></h3>

<section id="legend" class="row">
    @foreach (var pair in Model.Badges)
    {
        @Badge(pair.Value)
    }
</section>
<section id="teacherBoard" class="row" data-src="@Url.Action("Board")">
    <div id="loader" class="popover"></div>
</section>
<article id="details-popover" hidden="hidden">
    <table>
        <tbody>
            @foreach (var q in Model.Questions)
            {
                var id = q.Key + 'm';
                <tr>
                    <td>@q.Value</td>
                    <td id="@id"></td>
                </tr>
            }
        </tbody>
    </table>
</article>

@section Scripts{
    <script>
        //Pages.Board.init();

        Pages.Board.loadBoard();
        Pages.Board.initRemainingClock('#clockdiv', 'March 23 2016 20:0:0 GMT+02:00');
    </script>
}

@helper Banner()
{
    <div class="col-md-offset-1 col-md-11 banner">
        <span class="h3 col-xs-12 col-sm-5 col-lg-4">Встигніть @Html.RouteLink("проголосувати", "Vote")!</span>
        <span class="h3 col-xs-12 col-sm-7" style="color:red;">До оголошення результатів залишилось:</span>
        <div class="col-xs-12 col-sm-offset-5 col-sm-6 col-lg-offset-4" id="clockdiv">
            <div>
                <span class="days"></span>
                <div class="smalltext">Дні</div>
            </div>
            <div>
                <span class="hours"></span>
                <div class="smalltext">Годин</div>
            </div>
            <div>
                <span class="minutes"></span>
                <div class="smalltext">Хвилин</div>
            </div>
            <div>
                <span class="seconds"></span>
                <div class="smalltext">Секунд</div>
            </div>
        </div>
    </div>
}

@helper Badge(LimitViewModel badge)
{
    <div class="col-xs-3 col-md-2 col-lg-1 thumbnail">
        <img src="@badge.Image" data-toggle="tooltip" title="@badge.ToolTip.TrimEnd('?')" />
        <div class="caption">
            @if (badge.Description.EndsWith("?"))
            {
                @badge.Description.TrimEnd('?')
                @Popover(badge)
            }
            else
            {
                @badge.Description
            }
        </div>
    </div>
}

@helper Popover(LimitViewModel badge)
{
    var q = Model.Questions.GetOrDefault(badge.Id);
    if (q != null)
    {
        <a href="#" class="help" type="button" data-toggle="popover" data-content="@q">
            ?
        </a>
    }
}